{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","App.js","index.js","components/ContactsList/ContactList.module.css"],"names":["module","exports","Filter","value","onChangeFilter","className","s","filterContainer","filterContainerInput","type","onChange","e","target","ContactForm","state","name","number","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","contactForm","onSubmit","this","contactFormLabel","contactFormInput","contactFormButton","Component","ContactList","contacts","onRemoveContact","contactList","map","contact","contactItem","contactButton","onClick","id","App","filter","addContact","includes","alert","length","nextId","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.996516ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__Zdlme\",\"filterContainerInput\":\"Filter_filterContainerInput__qVq1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3X6JO\",\"contactFormLabel\":\"ContactForm_contactFormLabel__xu2Y9\",\"contactFormInput\":\"ContactForm_contactFormInput__3HMXo\",\"contactFormButton\":\"ContactForm_contactFormButton__3riRU\"};","import PropTypes from \"prop-types\";\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={s.filterContainer}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterContainerInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};","import React, { Component } from \"react\";\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n        <label className={s.contactFormLabel}>\r\n          Name\r\n          <input\r\n            className={s.contactFormInput}\r\n            type='text'\r\n            name='name'\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.contactFormLabel}>\r\n          Number\r\n          <input\r\n            className={s.contactFormInput}\r\n            type='text'\r\n            name='number'\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.contactFormButton} type='submit'>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={s.contactList}>\r\n    {contacts.map((contact) => (\r\n      <li className = {s.contactItem} key={contact.id}>\r\n        {`${contact.name} : ${contact.number}`}\r\n        {\r\n          <button\r\n            className={s.contactButton}\r\n            type='button'\r\n            name='delete'\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete contact\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\nexport default ContactList;","import React, { Component } from 'react';\nimport Filter from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList'\nimport nextId from 'react-id-generator';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n    name: '',\n    number: ''\n  };\n\n  addContact = (e) => {\n    const searchSameName = this.state.contacts\n      .map((contact) => contact.name)\n      .includes(e.name);\n\n      if (searchSameName) {\n      alert(`${e.name} is already in contacts`);\n    } else if (e.name.length === 0) {\n      alert('the field must not be empty!');\n    } else {\n      const contact = {\n        ...e,\n        id: nextId(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactsList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__B0itV\",\"contactItem\":\"ContactList_contactItem__327wM\",\"contactButton\":\"ContactList_contactButton__1mf8T\"};"],"sourceRoot":""}